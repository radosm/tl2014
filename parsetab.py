
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = ':\x0f\xc1O\xe9;|omO\xbezy\xc7bl'
    
_lr_action_items = {'THEN':([14,15,31,43,44,45,47,48,49,59,60,71,83,84,85,86,87,88,89,90,91,],[-45,-44,-42,-43,-29,-27,-31,-28,-30,80,-26,-41,-38,-39,-40,-32,-37,-34,-36,-33,-35,]),'RETURN':([14,15,22,31,35,37,43,44,45,47,48,49,51,53,57,60,65,67,71,79,80,83,84,85,86,87,88,89,90,91,92,95,96,97,99,],[-45,-44,33,-42,-22,33,-43,-29,-27,-31,-28,-30,-16,33,33,-26,-17,-18,-41,-23,33,-38,-39,-40,-32,-37,-34,-36,-33,-35,-4,-21,-19,33,-20,]),'NUMBER':([10,16,18,23,25,26,27,28,29,30,33,36,39,52,54,55,62,66,68,72,73,74,75,76,77,98,102,104,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'WHILE':([14,15,22,31,35,37,43,44,45,47,48,49,51,53,57,60,65,67,71,79,80,83,84,85,86,87,88,89,90,91,92,95,96,97,99,],[-45,-44,36,-42,-22,36,-43,-29,-27,-31,-28,-30,-16,36,36,-26,-17,-18,-41,-23,36,-38,-39,-40,-32,-37,-34,-36,-33,-35,-4,-21,-19,36,-20,]),'MINUS':([10,14,15,16,17,18,23,24,25,26,27,28,29,30,31,33,36,39,41,43,44,45,46,47,48,49,51,52,54,55,56,60,62,65,66,68,70,72,73,74,75,76,77,81,86,87,88,89,90,91,98,101,102,103,104,105,],[18,-45,-44,18,29,18,18,29,18,18,18,18,18,18,-42,18,18,18,29,-43,-29,-27,29,-31,-28,-30,29,18,18,18,29,-26,18,29,18,18,29,18,18,18,18,18,18,29,29,29,29,29,29,29,18,29,18,29,18,29,]),'PP':([14,15,31,43,44,45,47,48,49,60,101,103,],[-45,-44,-42,-43,-29,-27,-31,-28,-30,-26,102,104,]),'LE':([14,15,31,43,44,45,47,48,49,56,60,70,],[-45,-44,-42,-43,-29,-27,-31,-28,-30,72,-26,72,]),'RPAREN':([9,11,12,13,14,15,19,21,23,24,31,32,40,41,42,43,44,45,46,47,48,49,50,60,61,63,69,70,71,81,83,84,85,86,87,88,89,90,91,93,],[-4,-4,22,-10,-45,-44,-9,-12,-4,43,-42,-4,60,-4,-6,-43,-29,-27,64,-31,-28,-30,-11,-26,-5,-8,85,43,-41,-4,-38,-39,-40,-32,-37,-34,-36,-33,-35,-7,]),'POWER':([14,15,17,24,31,41,43,44,45,46,47,48,49,51,56,60,65,70,81,86,87,88,89,90,91,101,103,105,],[-45,-44,28,28,-42,28,-43,28,28,28,-31,28,28,28,28,-26,28,28,28,28,28,28,28,28,28,28,28,28,]),'NE':([14,15,31,43,44,45,47,48,49,56,60,70,],[-45,-44,-42,-43,-29,-27,-31,-28,-30,75,-26,75,]),'LT':([14,15,31,43,44,45,47,48,49,56,60,70,],[-45,-44,-42,-43,-29,-27,-31,-28,-30,76,-26,76,]),'PLUS':([14,15,17,24,31,41,43,44,45,46,47,48,49,51,56,60,65,70,81,86,87,88,89,90,91,101,103,105,],[-45,-44,26,26,-42,26,-43,-29,-27,26,-31,-28,-30,26,26,-26,26,26,26,26,26,26,26,26,26,26,26,26,]),'$end':([2,6,14,15,31,43,44,45,47,48,49,60,100,105,],[0,-1,-45,-44,-42,-43,-29,-27,-31,-28,-30,-26,-2,-3,]),'FUNCTION':([0,4,14,15,31,35,38,43,44,45,47,48,49,51,60,65,67,79,92,95,96,99,],[1,1,-45,-44,-42,-22,-15,-43,-29,-27,-31,-28,-30,-16,-26,-17,-18,-23,-4,-21,-19,-20,]),'GT':([14,15,31,43,44,45,47,48,49,56,60,70,],[-45,-44,-42,-43,-29,-27,-31,-28,-30,77,-26,77,]),'DIVIDE':([14,15,17,24,31,41,43,44,45,46,47,48,49,51,56,60,65,70,81,86,87,88,89,90,91,101,103,105,],[-45,-44,30,30,-42,30,-43,-29,30,30,-31,30,-30,30,30,-26,30,30,30,30,30,30,30,30,30,30,30,30,]),'FOR':([64,],[82,]),'EQUALS':([34,94,],[52,98,]),'ELSE':([14,15,31,35,43,44,45,47,48,49,51,60,65,67,79,92,95,96,99,],[-45,-44,-42,-22,-43,-29,-27,-31,-28,-30,-16,-26,-17,-18,-23,97,-21,-19,-20,]),'GE':([14,15,31,43,44,45,47,48,49,56,60,70,],[-45,-44,-42,-43,-29,-27,-31,-28,-30,74,-26,74,]),'LLAVED':([14,15,31,35,43,44,45,47,48,49,51,57,58,60,65,67,78,79,92,95,96,99,],[-45,-44,-42,-22,-43,-29,-27,-31,-28,-30,-16,-24,79,-26,-17,-18,-25,-23,-4,-21,-19,-20,]),'LPAREN':([5,7,10,14,16,18,23,25,26,27,28,29,30,33,36,39,52,54,55,62,66,68,72,73,74,75,76,77,98,102,104,],[9,10,16,23,16,16,16,16,16,16,16,16,16,16,54,54,16,54,54,16,54,54,16,16,16,16,16,16,16,16,16,]),'COMA':([11,14,15,17,31,32,41,43,44,45,47,48,49,60,81,],[20,-45,-44,27,-42,20,62,-43,-29,-27,-31,-28,-30,-26,62,]),'LLAVEI':([14,15,22,31,43,44,45,47,48,49,53,60,71,80,83,84,85,86,87,88,89,90,91,97,],[-45,-44,37,-42,-43,-29,-27,-31,-28,-30,37,-26,-41,37,-38,-39,-40,-32,-37,-34,-36,-33,-35,37,]),'TIMES':([14,15,17,24,31,41,43,44,45,46,47,48,49,51,56,60,65,70,81,86,87,88,89,90,91,101,103,105,],[-45,-44,25,25,-42,25,-43,-29,25,25,-31,25,-30,25,25,-26,25,25,25,25,25,25,25,25,25,25,25,25,]),'EQ':([14,15,31,43,44,45,47,48,49,56,60,70,],[-45,-44,-42,-43,-29,-27,-31,-28,-30,73,-26,73,]),'IF':([14,15,22,31,35,37,43,44,45,47,48,49,51,53,57,60,65,67,71,79,80,83,84,85,86,87,88,89,90,91,92,95,96,97,99,],[-45,-44,39,-42,-22,39,-43,-29,-27,-31,-28,-30,-16,39,39,-26,-17,-18,-41,-23,39,-38,-39,-40,-32,-37,-34,-36,-33,-35,-4,-21,-19,39,-20,]),'AND':([14,15,31,43,44,45,47,48,49,53,59,60,69,71,83,84,85,86,87,88,89,90,91,],[-45,-44,-42,-43,-29,-27,-31,-28,-30,66,66,-26,66,-41,-38,66,-40,-32,-37,-34,-36,-33,-35,]),'PLOT':([3,4,8,14,15,31,35,38,43,44,45,47,48,49,51,60,65,67,79,92,95,96,99,],[7,-13,-14,-45,-44,-42,-22,-15,-43,-29,-27,-31,-28,-30,-16,-26,-17,-18,-23,-4,-21,-19,-20,]),'NAME':([1,9,10,14,15,16,18,20,22,23,25,26,27,28,29,30,31,33,35,36,37,39,43,44,45,47,48,49,51,52,53,54,55,57,60,62,65,66,67,68,71,72,73,74,75,76,77,79,80,82,83,84,85,86,87,88,89,90,91,92,95,96,97,98,99,102,104,],[5,11,14,-45,-44,14,14,32,34,14,14,14,14,14,14,14,-42,14,-22,14,34,14,-43,-29,-27,-31,-28,-30,-16,14,34,14,14,34,-26,14,-17,14,-18,14,-41,14,14,14,14,14,14,-23,34,94,-38,-39,-40,-32,-37,-34,-36,-33,-35,-4,-21,-19,34,14,-20,14,14,]),'NOT':([36,39,54,55,66,68,],[55,55,55,55,55,55,]),'OR':([14,15,31,43,44,45,47,48,49,53,59,60,69,71,83,84,85,86,87,88,89,90,91,],[-45,-44,-42,-43,-29,-27,-31,-28,-30,68,68,-26,68,-41,-38,-39,-40,-32,-37,-34,-36,-33,-35,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lista_nombres_aux':([11,32,],[19,50,]),'plot':([3,],[6,]),'funcion':([0,4,],[4,4,]),'lista_expresiones_aux':([41,81,],[61,93,]),'lista_expresiones':([23,],[40,]),'instruccion':([22,37,53,57,80,97,],[35,57,35,57,35,35,]),'lista_instrucciones':([37,57,],[58,78,]),'else':([92,],[96,]),'programa':([0,],[2,]),'lista_nombres':([9,],[12,]),'rango':([98,],[100,]),'bloque':([22,53,80,97,],[38,67,92,99,]),'lambda':([9,11,23,32,41,81,92,],[13,21,42,21,63,63,95,]),'expression':([10,16,18,23,25,26,27,28,29,30,33,36,39,52,54,55,62,66,68,72,73,74,75,76,77,98,102,104,],[17,24,31,41,44,45,46,47,48,49,51,56,56,65,70,56,81,56,56,86,87,88,89,90,91,101,103,105,]),'COMP':([36,39,54,55,66,68,],[53,59,69,71,83,84,]),'lista_funciones':([0,4,],[3,8,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> lista_funciones plot','programa',2,'p_programa','mylanga.py',107),
  ('plot -> PLOT LPAREN expression COMA expression RPAREN FOR NAME EQUALS rango','plot',10,'p_plot','mylanga.py',110),
  ('rango -> expression PP expression PP expression','rango',5,'p_rango','mylanga.py',113),
  ('lambda -> <empty>','lambda',0,'p_lambda','mylanga.py',116),
  ('lista_expresiones -> expression lista_expresiones_aux','lista_expresiones',2,'p_lista_expresiones','mylanga.py',120),
  ('lista_expresiones -> lambda','lista_expresiones',1,'p_lista_expresiones','mylanga.py',121),
  ('lista_expresiones_aux -> COMA expression lista_expresiones_aux','lista_expresiones_aux',3,'p_lista_expresiones_aux','mylanga.py',124),
  ('lista_expresiones_aux -> lambda','lista_expresiones_aux',1,'p_lista_expresiones_aux','mylanga.py',125),
  ('lista_nombres -> NAME lista_nombres_aux','lista_nombres',2,'p_lista_nombres','mylanga.py',128),
  ('lista_nombres -> lambda','lista_nombres',1,'p_lista_nombres','mylanga.py',129),
  ('lista_nombres_aux -> COMA NAME lista_nombres_aux','lista_nombres_aux',3,'p_lista_nombres_aux','mylanga.py',132),
  ('lista_nombres_aux -> lambda','lista_nombres_aux',1,'p_lista_nombres_aux','mylanga.py',133),
  ('lista_funciones -> funcion','lista_funciones',1,'p_lista_funciones','mylanga.py',136),
  ('lista_funciones -> funcion lista_funciones','lista_funciones',2,'p_lista_funciones_recursiva','mylanga.py',139),
  ('funcion -> FUNCTION NAME LPAREN lista_nombres RPAREN bloque','funcion',6,'p_funcion','mylanga.py',142),
  ('instruccion -> RETURN expression','instruccion',2,'p_instruccion_return','mylanga.py',145),
  ('instruccion -> NAME EQUALS expression','instruccion',3,'p_instruccion_asig','mylanga.py',148),
  ('instruccion -> WHILE COMP bloque','instruccion',3,'p_instruccion_while','mylanga.py',151),
  ('instruccion -> IF COMP THEN bloque else','instruccion',5,'p_instruccion_ifthen','mylanga.py',154),
  ('else -> ELSE bloque','else',2,'p_else','mylanga.py',157),
  ('else -> lambda','else',1,'p_else','mylanga.py',158),
  ('bloque -> instruccion','bloque',1,'p_bloque','mylanga.py',161),
  ('bloque -> LLAVEI lista_instrucciones LLAVED','bloque',3,'p_bloque','mylanga.py',162),
  ('lista_instrucciones -> instruccion','lista_instrucciones',1,'p_lista_instrucciones','mylanga.py',165),
  ('lista_instrucciones -> instruccion lista_instrucciones','lista_instrucciones',2,'p_lista_instrucciones','mylanga.py',166),
  ('expression -> NAME LPAREN lista_expresiones RPAREN','expression',4,'p_expression_funcion','mylanga.py',169),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','mylanga.py',172),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','mylanga.py',173),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','mylanga.py',174),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','mylanga.py',175),
  ('expression -> expression POWER expression','expression',3,'p_expression_binop','mylanga.py',176),
  ('COMP -> expression LE expression','COMP',3,'p_comparison_binop','mylanga.py',184),
  ('COMP -> expression LT expression','COMP',3,'p_comparison_binop','mylanga.py',185),
  ('COMP -> expression GE expression','COMP',3,'p_comparison_binop','mylanga.py',186),
  ('COMP -> expression GT expression','COMP',3,'p_comparison_binop','mylanga.py',187),
  ('COMP -> expression NE expression','COMP',3,'p_comparison_binop','mylanga.py',188),
  ('COMP -> expression EQ expression','COMP',3,'p_comparison_binop','mylanga.py',189),
  ('COMP -> COMP AND COMP','COMP',3,'p_and','mylanga.py',198),
  ('COMP -> COMP OR COMP','COMP',3,'p_or','mylanga.py',201),
  ('COMP -> LPAREN COMP RPAREN','COMP',3,'p_cond_paren','mylanga.py',204),
  ('COMP -> NOT COMP','COMP',2,'p_cond_not','mylanga.py',207),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','mylanga.py',210),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','mylanga.py',213),
  ('expression -> NUMBER','expression',1,'p_expression_number','mylanga.py',216),
  ('expression -> NAME','expression',1,'p_expression_name','mylanga.py',219),
]
